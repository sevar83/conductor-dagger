apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

task sourceJar(type: Jar) {
  from android.sourceSets.main.java.srcDirs
  classifier "source"
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      groupId 'com.github.sevar83.conductor-dagger'
      artifactId 'injection'
      version rootProject.ext.versionName

      artifact(sourceJar)
      artifact bundleRelease
      pom.withXml {
        def dependenciesNode = asNode().appendNode('dependencies')
        // Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
        configurations.compile.allDependencies.each {
          if(it.group != null && (it.name != null || "unspecified".equals(it.name)) && it.version != null)
          {
            def dependencyNode = dependenciesNode.appendNode('dependency')
            dependencyNode.appendNode('groupId', it.group)
            dependencyNode.appendNode('artifactId', it.name)
            dependencyNode.appendNode('version', it.version)
          }
        }
      }
    }
  }
  repositories {
    mavenLocal()
  }
}

ext {
  artifact = 'conductor-dagger-android'
}

def globalConf = rootProject.ext

android {
  compileSdkVersion globalConf.compileSdkVersion
  buildToolsVersion globalConf.buildToolsVersion

  defaultConfig {
    minSdkVersion globalConf.minSdkVersion
    targetSdkVersion globalConf.targetSdkVersion
    versionCode globalConf.versionCode
    versionName globalConf.versionName

    consumerProguardFiles 'proguard-rules.pro'
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }

  lintOptions {
    abortOnError false
  }
}

dependencies {
  Map<String, String> dependencies = globalConf.dependencies

  compile dependencies.conductor
  compile dependencies.daggerAndroid
}
